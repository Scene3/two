/---------------------
 -- two_component.bento
 --
 -- Component for rendering 2D javascript content
 --
 -- Copyright (c) 2016 by Michael St. Hippolyte
 --
 --/
 
site two [=

     
    /--------- two_component ----------/

    /** Component to display and control 2D graphics.
     *
     *  A two_component is a DOM element that corresponds to a rendering 
     *  canvas.  
     *
     *  There are two scenarios in which this component is called: during
     *  page construction and via ajax.  These correspond to the two 
     *  parameter lists.  When passed a stage, the component constructs it
     *  and keeps it.  When passed a param table, the component processes 
     *  the params and responds with any changes to the kept stage.  Changes 
     *  may include modification of objects in the stage, addition or removal 
     *  of objects, or wholesale replacement of the stage.
     *
     **/ 
   
    component two_component(stage new_stage),(params{}) [=

        stage_name = "stage"
        stage_bg_color = "#FFFFFF"

        id = stage_name + "_component"
        
        component_id = id
        component_name = stage_name + "Component"

        /-----------------------/
        /------ scripting ------/
        
        /---- subclasses may override this to add additional scripts to the list  ----/
        include_scripts = [ "/js/lib/pixi.min.js" ]

        /** if true, an onLoad handler is defined and all the scripts defined by this component
         *  are embedded in the handler.
         **/
        boolean run_scripts_on_load = true

        scripts [=
            info_log("instantiating include_scripts");
            for s in include_scripts [|
                <script src="[= s; =]"></script>
            |]
            info_log("instantiating main_script");
            main_script;
        =]


        main_script [=

            debug_log("main_script called with stage " + new_stage.name);
            
            [| <script> |]
            
            
            if (run_scripts_on_load) [=
                [| function [= stage_name; =]_onload() { |]
            =]
            
            [|   
                var viewComponent = document.getElementById([= component_id; =]); 
                var viewWidth;
                var viewHeight;
            |]
            
            calc_view_size_logic; 
            
            [|
                var [= stage_name; =] = new PIXI.Container([= stage_bg_color; =]);
                var renderer = PIXI.autoDetectRenderer(viewWidth, viewHeight);
                viewComponent.appendChild(renderer.view);

                animate();
                
                function animate() {
                    requestAnimationFrame(animate);
                    [= stage.next_frame; =]
                    renderer.render([= stage_name; =]);
                }

            |]

            if (run_scripts_on_load) [=
                [| } |]
                set_handler("onload");
            =]
            
            [| </script> |]    
        =]


        calc_view_size_logic [=
        
            if (size_to_window) [|
                var x = 0;
                var y = 0;
                var width = 0;
                var height = 0;
                for (var element = viewComponent; element != null; element = element.offsetParent) {
                   x += element.offsetLeft;
                   y += element.offsetTop;
                   if (element.offsetParent == null) {
                       width = element.offsetWidth;
                       height = element.offsetHeight;
                   }
                }
                viewWidth = width - x;
                viewHeight = height - y;
            |] else [|
                viewWidth = viewComponent.clientWidth;
                viewHeight = viewComponent.clientHeight;
            |]
        =]

        


        /--------------------------------/
        /---- component construction ----/

        /---- full instantiation ----/
        with (new_stage) [=
            info_log("instantiating two_component");    
            sub;
            debug_log("instantiating two_component scripts");
            scripts;
            
        /---- respond to ajax call ----/
        =] else with (params) [=
        
        
        =]
    =]

=]
